card: kleinstes, kann selbst nichts tun, erstellt wenn nötig in gameControl --> dort name, typ, damage gewürfelt je nach package chosen

deck:enthält 4 cards (vector of cardpointer), leer erstellt, dann die vom user gewählten karten nacheinander hinzugefügt, kann bei neuem 
Zusammenstellen geleert werden

package: enthält 5 cards (vector of cardpointer), dem user monsterPack, SpellPack oder Mixpack vorgeschlagen, dann erst von gameControl pack 
erstellt mit schon erstelltem vector of cardpointers, gelöscht nach Kauf

stack: enthält max. 25 cards (vector of cardpointer), leer erstellt, wenn gekauft oder getraded --> packvector oder tradevector{1} hintangefügt; 
card aus stack entfernen (getraded) oder pausieren (status geändert/in trading) --> index von gameControl herausgefunden

user: erstellt mit name u password, später veränderbar; hat einen stack und ein deck(leer initialisiert) und einen Dialog; gibt stack und deck 
an gameControl zur Verwaltung?; coins und score änderbar hier; select deck macht der user

scoreboard: liste von gewinnern und verlierern?; current score nur in dialog angezeigt; kann beide listen zurückgeben und zu ihnen hinzufügen

gamecontrol:wie eine main, playGame operiert alles; user einloggen (DB); in fkt kann herausfinden welcher user mit token; 
tradingcenter hält alle trading optionen, setuptrade ist für hochladen eigener karte, select gibt ansicht und durch nummer dann auswählen, 
otheroffer zeigt angebot von anderem, agree wickelt ganzen trade ab, wieder select, tradethecards führt tatsächlichen tausch durch(index finden, 
löschen, vertauschen, offer entfernen bei anderem, status ändern); buypackages wickelt packs ab, optionen monster oder spell, 
generatepackage erstellt cards und in gibt in vector, in buy dann zu userstack hinzugefügt
choosebattle initialisiert passende klasse, startbattle wickelt kampf ab, deck ausgesucht, dann so lange battlefunktionen verwendet bis zu ende, 
scores und board updaten bevor startbattle zu ende, ausleeren(deck, battle)

battle: vorlage, nie selbst initialisiert, hat nur einzelne stücke vom battle, alles in startbattle gamecontrol gesteuert; chooseattacking ist 
random, iscardstronger nimmt user1 card zuerst und vergleicht, bool ja/nein als antwort, specialties auch einbezogen in startbattle ein loop, beendet wenn isoutofcards 
wahr wird

mixbattle: mit spell und monster, bei iscardstronger wird auch das element einkalkuliert durch isstrongerelements wo element zu damage dazugerechnet, ersetzt normales stronger, bool als antwort

monsterbattle: noch gleich wie battle, vllt zusätze später

demand: inhalt für demand bei tausch, wird mit werten initialisiert, sollte nach tausch bei user gelöscht werden

dialogue: nur für text, bekommt alles nötige von gamecontrol 