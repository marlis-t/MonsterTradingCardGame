@startuml
class user{
    -String username
    -String password
    -int coins
    -int score
    -stack* myStack
    -deck* myDeck
    -dialogue* myDialogue
    ..Getter..
    +String getUsername()
    +String getPassword()
    +stack* getStack()
    +deck* getDeck()
    +int getCoins()
    +int getScore()
    ..Setter..
    +void setUsername(String username)
    +void setPassword(String password)
    --Constructor--
    +user(username, password)
    --Methods--
    +void changeCoins(int difference)
    +void changeScore(int difference)
    +void selectDeck()
}

class card{
    -String type {spell or monster}
    -String name
    -int damage
    -String element
    -String status
    ..Getter & Setter..
    --Constructor--
  +card(String type, String name, int damage, String element){}
}

class deck{
    -vector<card*> deckOfCards {4}
    ..Getter..
    +vector*<card*> getDeckOfCards()
    --Constructor--
    +deck()
    --Method--
    +void addCardToDeck(card* chosenCard)
    +void emptyDeck()
}

class package{
    -vector<card*> packOfCards {5}
    ..Getter..
    +vector*<card*> getPackOfCards()
    --Constructor--
    +package(vector*<card*> Cards)
}

class stack{
    -vector<card*> allPlayerCards {25}
    ..Getter..
    +vector*<card*> getStack()
    --Constructor--
    +stack()
    --Methods--
    +void addCardsToStack(vector*<cards*> newCards)
    +void removeCard(int index)
    +void changeCardStatus(int index)
}

class scoreBoard{
    -vector<String> winner
    -vector<String> loser
    ..Getter..
    +vector*<String> getWinnerList()
    +vector*<String> getLoserList()
    --Constructor--
    +scoreBoard()
    --Methods--
    +void addWinnerAndLoser(String winnerName, String loserName)
}

interface battle{

}

class dialogue{
}

class tradingCenter{
    -card* offerUser1
    -demand* demandUser1
    -card* offerUser2
    -demand* demandUser2
    ..Getter..
    +card* getOfferUser1()
    +card* getOfferUser2()
    +demand* getDemandUser1()
    +demand* getDemandUser2()
    ..Setter..
    +void setOfferUser1()
    +void setOfferUser2()
    +void setDemandUser1()
    +void setDemandUser2()
    --Constructor--
    +tradingCenter()
}

class demand{
    -int demandMinDamage
    -String demandType
    -String demandElement
    ..Getter..
    +int getDemandMinDamage()
    +String getDemandType()
    +String getDemandElement()
    ..Setter..
    +void setDemandMinDamage(int minDamage)
    +void setDemandType(String type)
    +void setDemandElement(String element)
    --Constructor--
    +demand(minDamage, type, element)
    --Methods--
    +void emptyDemand()
}

class gameControl{
 -user* User1
 -user* User2
 -battle* currentBattle
 -dialogue* gameDialogue
 ..Setter..
 +void setUser1()
 +void setUser2()
 +void setBattle()
 --Constructor--
 +gameControl()
 --Methods--
 +void startGame()
 +void signInUsers()




}












@enduml